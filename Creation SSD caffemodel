Dans un premier temps, on télécharge les images
cd home/jp
wget http://host.robots.ox.ac.uk/pascal/VOC/voc2012/VOCtrainval_11-May-2012.tar
wget http://host.robots.ox.ac.uk/pascal/VOC/voc2007/VOCtrainval_06-Nov-2007.tar
wget http://host.robots.ox.ac.uk/pascal/VOC/voc2007/VOCtest_06-Nov-2007.tar
# Extract the data.
tar -xvf VOCtrainval_11-May-2012.tar
tar -xvf VOCtrainval_06-Nov-2007.tar
tar -xvf VOCtest_06-Nov-2007.tar
->on retrouve un repertoire VOCdevkit, ces sont les images du train.
-----------------------------------------------------------------------------------------
On télécharge le modele caffe-SSD
https://github.com/weiliu89/caffe/tree/ssd
On copie le fichier caffe/Makefile.config ->caffe-SSD/Makefile.config
et on reconfigure comme pour l'installation caffe en mode GPU (https://github.com/grizou0/Caffe-SSD/blob/master/Installation%20GPU)

Pour le modèle caffe-ssd, on doit rajouter:

sudo apt-get install libtcmalloc-minimal4

sudo nano ~/.bashrc
export LD_PRELOAD="/usr/lib/libtcmalloc_minimal.so.4"
source sudo nano ~/.bashrc

sinon, on a un abord sur le runtest

make all
make py
make test
make pytest
make runtest
Moyennant cette modification, si la compilation de caffe ne pose pas de problème, caffe-ssd passe sans problème également.
[----------] 6 tests from GPUMathFunctionsTest/0, where TypeParam = float
[ RUN      ] GPUMathFunctionsTest/0.TestSgnbit
[       OK ] GPUMathFunctionsTest/0.TestSgnbit (3 ms)
[ RUN      ] GPUMathFunctionsTest/0.TestFabs
[       OK ] GPUMathFunctionsTest/0.TestFabs (4 ms)
[ RUN      ] GPUMathFunctionsTest/0.TestSign
[       OK ] GPUMathFunctionsTest/0.TestSign (3 ms)
[ RUN      ] GPUMathFunctionsTest/0.TestScale
[       OK ] GPUMathFunctionsTest/0.TestScale (4 ms)
[ RUN      ] GPUMathFunctionsTest/0.TestCopy
[       OK ] GPUMathFunctionsTest/0.TestCopy (3 ms)
[ RUN      ] GPUMathFunctionsTest/0.TestAsum
[       OK ] GPUMathFunctionsTest/0.TestAsum (3 ms)
[----------] 6 tests from GPUMathFunctionsTest/0 (20 ms total)

[----------] Global test environment tear-down
[==========] 2361 tests from 309 test cases ran. (665907 ms total)
[  PASSED  ] 2361 tests.


------------------------------------------------------------------------------------------
On commence enfin l'application........... 
En test.........................................

fichier de base à utilise:

caffe-ssd/data/VOC0712/
     create_list.sh
     create_data.sh                 pour la creation des lmdb
     labelmap_voc.prototxt          liste des noms répertoriés dans les images
 caffe-examples/ssd    
    ssd_pascal.py                    pour le train
    ssd_pascal_webcam.py             pour l'essai du model modelcaffe
    
Creation lmdb
-------------
Ici, on va créer un répertoire lmdb destiné au train.
./data/VOC0712/create_list.sh
# You can modify the parameters in create_data.sh if needed.
# It will create lmdb files for trainval and test with encoded original image:
#   - $HOME/data/VOCdevkit/VOC0712/lmdb/VOC0712_trainval_lmdb
#   - $HOME/data/VOCdevkit/VOC0712/lmdb/VOC0712_test_lmdb
# and make soft links at examples/VOC0712/
./data/VOC0712/create_data.sh
Training
--------
On lance python ssd_pascal.py

Test du modele avec ssd_pascal_webcam.py
----------------------------------------
python ssd_pascal_webcam.py
