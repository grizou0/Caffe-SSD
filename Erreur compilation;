/usr/bin/ld : ne peut trouver -lhdf5_hl
/usr/bin/ld : ne peut trouver -lhdf5
collect2: error: ld returned 1 exit status
Makefile:582 : la recette pour la cible « .build_release/lib/libcaffe.so.1.0.0 » a échouée

---->  dans Makefile.config, modifier la path:
INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial/
LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu/hdf5/serial/
---------------------------------------------------------------------------------------------------------------------------------
CXX tools/upgrade_net_proto_text.cpp
CXX/LD -o .build_release/tools/upgrade_net_proto_text.bin
.build_release/lib/libcaffe.so : référence indéfinie vers « cv::imread(cv::String const&, int) »
.build_release/lib/libcaffe.so : référence indéfinie vers « cv::imencode(cv::String const&, cv::_InputArray const&, std::vector<unsigned char, std::allocator<unsigned char> >&, std::vector<int, std::allocator<int> > const&) »
.build_release/lib/libcaffe.so : référence indéfinie vers « cv::imdecode(cv::_InputArray const&, int) »
collect2: error: ld returned 1 exit status
Makefile:635 : la recette pour la cible « .build_release/tools/upgrade_net_proto_text.bin » a échouée

-----> reference sur opencv, une version opencv est installée (dans mon cas opencv-3.4.0)
Même si le fichier Makefile.config ne demande pas de compiler opencv, on doit introduire la version dans ce fichier:
# Uncomment if you're using OpenCV 3
OPENCV_VERSION := 3 # j'ai la version opencv-3.4

-->
AR -o .build_release/lib/libcaffe.a
LD -o .build_release/lib/libcaffe.so.1.0.0
CXX tools/upgrade_net_proto_text.cpp
CXX/LD -o .build_release/tools/upgrade_net_proto_text.bin
CXX tools/upgrade_net_proto_binary.cpp
CXX/LD -o .build_release/tools/upgrade_net_proto_binary.bin
CXX tools/compute_image_mean.cpp
CXX/LD -o .build_release/tools/compute_image_mean.bin
...... compilation ok
compute image mean permet d'utiliser opencv pour la reduction d'image dans le process lmdb. (create_data...)
---------------------------------------------------------------------------------------------------------------------------------
CXX src/caffe/parallel.cpp
NVCC src/caffe/solvers/adagrad_solver.cu
nvcc fatal   : Unsupported gpu architecture 'compute_20'
Makefile:604 : la recette pour la cible « .build_release/cuda/src/caffe/solvers/adagrad_solver.o » a échouée
make: *** [.build_release/cuda/src/caffe/solvers/adagrad_solver.o] Erreur 1

---> J'utilise CUDA-8.0, compute_20 n'est pas considéré.
Je supprime la ligne dans Makefile.config
# CUDA architecture setting: going with all of them.
# For CUDA < 6.0, comment the *_50 through *_61 lines for compatibility.
# For CUDA < 8.0, comment the *_60 and *_61 lines for compatibility.
# For CUDA >= 9.0, comment the *_20 and *_21 lines for compatibility.
CUDA_ARCH :=# -gencode arch=compute_20,code=sm_20 \
		-gencode arch=compute_20,code=sm_21 \
		-gencode arch=compute_30,code=sm_30 \
		-gencode arch=compute_35,code=sm_35 \
		-gencode arch=compute_50,code=sm_50 \
		-gencode arch=compute_52,code=sm_52 \
		-gencode arch=compute_60,code=sm_60 \
		-gencode arch=compute_61,code=sm_61 \
		-gencode arch=compute_61,code=compute_61
-------------------------------------------------------------------------------------------------------------------------------
Erreur ssd_pascal_py (training)
out of memory ->changer 
# Divide the mini-batch to different GPUs.
batch_size = 10    #evite le memory out, diminuer après 10000 iterations
accum_batch_size = 10
---------------------------------------------------------------------------------------------


